<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="App\Controller\Admin\BlogController" namespace="App\Controller\Admin" name="BlogController" abstract="false" final="false" start="31" end="171">
  <file path="../src/Controller/Admin" file="BlogController.php" realpath="/var/www/html/joseantoniomartinez/symfony-4-mini-blog/app/src/Controller/Admin/BlogController.php" size="6413" time="2019-02-15T08:55:23+00:00" unixtime="1550220923" sha1="d6198c54d0166a481ed782a420093186f89ae7fe" relative="Controller/Admin/BlogController.php"/>
  <docblock>
    <description compact="Controller used to manage blog contents in the backend.">Please note that the application backend is developed manually for learning
purposes. However, in your real Symfony application you should use any of the
existing bundles that let you generate ready-to-use backends without effort.

See http://knpbundles.com/keyword/admin</description>
    <route value="(&quot;/admin/post&quot;)"/>
    <isgranted value="(&quot;ROLE_ADMIN&quot;)"/>
    <author value="Ryan Weaver &lt;weaverryan@gmail.com&gt;"/>
    <author value="Javier Eguiluz &lt;javier.eguiluz@gmail.com&gt;"/>
  </docblock>
  <extends full="Symfony\Bundle\FrameworkBundle\Controller\AbstractController" namespace="Symfony\Bundle\FrameworkBundle\Controller" name="AbstractController" unresolved="true"/>
  <method name="index" start="47" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Lists all Post entities.">This controller responds to two different routes with the same URL:
  * 'admin_post_index' is the route with a name that follows the same
    structure as the rest of the controllers of this class.
  * 'admin_index' is a nice shortcut to the backend homepage. This allows
    to create simpler links in the templates. Moreover, in the future we
    could move this annotation to any other controller while maintaining
    the route name and therefore, without breaking any existing link.</description>
      <route value="(&quot;/&quot;, methods={&quot;GET&quot;}, name=&quot;admin_index&quot;)"/>
      <route value="(&quot;/&quot;, methods={&quot;GET&quot;}, name=&quot;admin_post_index&quot;)"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </return>
    <parameter name="posts" byreference="false" type="object">
      <type full="App\Repository\PostRepository" namespace="App\Repository" name="PostRepository"/>
    </parameter>
  </method>
  <method name="new" start="63" end="102" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Creates a new Post entity."/>
      <route value="(&quot;/new&quot;, methods={&quot;GET&quot;, &quot;POST&quot;}, name=&quot;admin_post_new&quot;) NOTE: the Method annotation is optional, but it's a recommended practice to constraint the HTTP methods each controller responds to (by default it responds to all methods)."/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <inline>
      <comment value="See https://symfony.com/doc/current/book/forms.html#submitting-forms-with-multiple-buttons" line="68"/>
      <comment value="the isSubmitted() method is completely optional because the other" line="74"/>
      <comment value="isValid() method already checks whether the form is submitted." line="75"/>
      <comment value="However, we explicitly add it to improve code readability." line="76"/>
      <comment value="See https://symfony.com/doc/current/best_practices/forms.html#handling-form-submits" line="77"/>
    </inline>
  </method>
  <method name="show" start="109" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds and displays a Post entity."/>
      <route value="(&quot;/{id&lt;\d+&gt;}&quot;, methods={&quot;GET&quot;}, name=&quot;admin_post_show&quot;)"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </return>
    <parameter name="post" byreference="false" type="object">
      <type full="App\Entity\Post" namespace="App\Entity" name="Post"/>
    </parameter>
    <inline>
      <comment value="This security check can also be performed" line="111"/>
      <comment value="using an annotation: @IsGranted(&quot;show&quot;, subject=&quot;post&quot;, message=&quot;Posts can only be shown to their authors.&quot;)" line="112"/>
    </inline>
  </method>
  <method name="edit" start="126" end="144" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Displays a form to edit an existing Post entity."/>
      <route value="(&quot;/{id&lt;\d+&gt;}/edit&quot;,methods={&quot;GET&quot;, &quot;POST&quot;}, name=&quot;admin_post_edit&quot;)"/>
      <isgranted value="(&quot;edit&quot;, subject=&quot;post&quot;, message=&quot;Posts can only be edited by their authors.&quot;)"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="post" byreference="false" type="object">
      <type full="App\Entity\Post" namespace="App\Entity" name="Post"/>
    </parameter>
  </method>
  <method name="delete" start="152" end="170" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Deletes a Post entity."/>
      <route value="(&quot;/{id}/delete&quot;, methods={&quot;POST&quot;}, name=&quot;admin_post_delete&quot;)"/>
      <isgranted value="(&quot;delete&quot;, subject=&quot;post&quot;)"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Symfony\Component\HttpFoundation\Response" namespace="Symfony\Component\HttpFoundation" name="Response"/>
    </return>
    <parameter name="request" byreference="false" type="object">
      <type full="Symfony\Component\HttpFoundation\Request" namespace="Symfony\Component\HttpFoundation" name="Request"/>
    </parameter>
    <parameter name="post" byreference="false" type="object">
      <type full="App\Entity\Post" namespace="App\Entity" name="Post"/>
    </parameter>
    <inline>
      <comment value="Delete the tags associated with this blog post. This is done automatically" line="158"/>
      <comment value="by Doctrine, except for SQLite (the database used in this application)" line="159"/>
      <comment value="because foreign key support is not enabled by default in SQLite" line="160"/>
    </inline>
  </method>
</class>
